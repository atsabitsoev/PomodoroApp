//
//  HomeViewController.swift
//  PomodoroApp
//
//  Created Ацамаз on 07/01/2019.
//  Copyright © 2019 a.s.bitsoev. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HomeViewController: UIViewController, HomeViewProtocol {

	var presenter: HomePresenterProtocol?
    
    
    
    var newName = String()
    var arrayOfTaskNames = [String]()
    var arrayOfTaskTimes = [String]()
    var arrayOfCountOfCircles = [String]()
    
    var currentTheme: MyTheme?
    
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var plusButton: UIButton!
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        NotificationCenter.default.addObserver(self,
                                               selector: #selector(setTheme),
                                               name: NSNotification.Name("setTheme"),
                                               object: nil)
        
        NotificationCenter.default.addObserver(self,
                                               selector: #selector(updateTable),
                                               name: NSNotification.Name("updateTable"),
                                               object: nil)
        
        self.navigationController?.navigationBar.shadowImage = UIImage()
        extendedLayoutIncludesOpaqueBars = true
        
        updateTasksArrays()
        
        setTheme()
        
    }
    
    
    override func viewWillAppear(_ animated: Bool) {
        // DESELECT ALL ROWS
        for row in 0..<tableView.numberOfRows(inSection: 0) {
            tableView.deselectRow(at: IndexPath(row: row, section: 0), animated: false)
        }
    }
    
    
    @objc func updateTable() {
        print("обновил таблицу")
        updateTasksArrays()
        tableView.reloadData()
    }
    
    
    @objc func setTheme() {
        
        let curentThemename = UserDefaults.standard.string(forKey: "theme") ?? "Red Rose"
        let currentTheme = Themes(rawValue: curentThemename)!
        
        self.currentTheme = MyTheme(theme: currentTheme)
    
        tableView.reloadData()
        plusButton.setImage(self.currentTheme?.plusImage, for: .normal)
        self.navigationController?.navigationBar.tintColor = self.currentTheme!.mainColor

    }
    
    
    override func viewDidAppear(_ animated: Bool) {
        if UserDefaults.standard.bool(forKey: "timerEnabled") {
            let index = UserDefaults.standard.integer(forKey: "indexOfCurrentTask")
            presenter?.cellSelected(at: [0, index])
        }
        
    }
    
    
    // ADD BUTTON TAPPED
    @IBAction func addButtonTapped(_ sender: UIButton) {
        askingForNameAlert()
    }
    
    
    // SETTINGS BUTTON TAPPED
    @IBAction func SettingsButtonTapped(_ sender: UIBarButtonItem) {
        
        presenter?.settingsButtonTapped()
        
    }
    
    
    // ALERTS
    // ASKING FOR NAME ALERT
    func askingForNameAlert() {
        let alert = UIAlertController(title: NSLocalizedString("Новая задача", comment: "new"), message: NSLocalizedString("Введите имя задачи", comment: "введите"), preferredStyle: .alert)
        
        let okAction = UIAlertAction(title: NSLocalizedString("Добавить", comment: "add"), style: .default) { (action) in
            if !(self.presenter?.saveTask(withName: alert.textFields!.first!.text!))!{
                self.alreadyExistsAlert()
            } else {
                
                self.updateTasksArrays()
                self.tableView.beginUpdates()
                self.tableView.insertRows(at: [IndexPath(row: self.tableView.numberOfRows(inSection: 0), section: 0)], with: .automatic)
                self.tableView.endUpdates()
            }
        }
        let cancelAtion = UIAlertAction(title: NSLocalizedString("Отмена", comment: "cancel"), style: .cancel, handler: nil)
        
        alert.addTextField { (tf) in }
        alert.addAction(okAction)
        alert.addAction(cancelAtion)
        
        self.present(alert, animated: true, completion: nil)
    }
    // ALREADY EXIST ALERT
    func alreadyExistsAlert() {
        let alert = UIAlertController(title: NSLocalizedString("Попробуйте снова", comment: "try"), message: NSLocalizedString("Задача с таким именем уже существует", comment: "exist"), preferredStyle: .alert)
        
        let okAtion = UIAlertAction(title: "Ок", style: .default) { (alertAction) in
            self.askingForNameAlert()
        }
        
        alert.addAction(okAtion)
        self.present(alert, animated: true, completion: nil)
    }
    
    
    // UPDATE NAMES AND TIMES
    func updateTasksArrays() {
        arrayOfTaskNames = presenter!.arrayOfTaskNames()
        arrayOfTaskTimes = presenter!.arrayOfTaskTimeSpent()
        arrayOfCountOfCircles = presenter!.arrayOfCountOfCircles()
    }

    
}
