//
//  TaskProtocols.swift
//  PomodoroApp
//
//  Created Ацамаз on 07/01/2019.
//  Copyright © 2019 a.s.bitsoev. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol TaskWireframeProtocol: class {

    func closeTaskVC()
}
//MARK: Presenter -
protocol TaskPresenterProtocol: class {

    func getTaskName(byIndex index: Int) -> String
    func closeButtonTapped()
    func startButtonTapped()
    func checkTimer()
    func prepareTimeRest(timeRest: Int)
    var currentTask: String { get set }
}

//MARK: Interactor -
protocol TaskInteractorProtocol: class {

  var presenter: TaskPresenterProtocol?  { get set }
    
    func getArrayOfTasks() -> [Task]?
    func startTimer()
    func stopTimer()
    func pauseTimer()
    func resumeTimer()
    func getTimeRest()
    func startingNewCircle()
    
}

//MARK: View -
protocol TaskViewProtocol: class {

  var presenter: TaskPresenterProtocol?  { get set }
    
    var arrayOfMinutesAndSeconds: [String] { get set }
    func setLevelOfBubbles(proportion: Float, type: TimerTypes)
    var nameOfCurrentTask: String { get set }
    func setTextAndColorOfStartButton()
}
